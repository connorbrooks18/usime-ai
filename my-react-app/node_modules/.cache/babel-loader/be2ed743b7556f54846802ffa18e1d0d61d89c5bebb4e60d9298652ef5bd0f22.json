{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamer\\\\OneDrive\\\\Desktop\\\\Code_Projects\\\\USIME_AI\\\\usime-ai\\\\my-react-app\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if the user is already logged in when the app loads\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/check-auth', {\n          credentials: 'include' // Important for cookies/session\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.authenticated) {\n            setUser(data.user);\n          }\n        }\n      } catch (err) {\n        console.error('Auth check failed:', err);\n        setError('Failed to check authentication status');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Important for cookies/session\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n      setUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (name, email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/logout', {\n        method: 'POST',\n        credentials: 'include' // Important for cookies/session\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.message || 'Logout failed');\n      }\n      setUser(null);\n    } catch (err) {\n      console.error('Logout failed:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","checkAuthStatus","response","fetch","credentials","ok","data","json","authenticated","err","console","login","email","password","method","headers","body","JSON","stringify","Error","message","register","name","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/gamer/OneDrive/Desktop/Code_Projects/USIME_AI/usime-ai/my-react-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if the user is already logged in when the app loads\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/auth/check-auth', {\r\n          credentials: 'include'  // Important for cookies/session\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.authenticated) {\r\n            setUser(data.user);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth check failed:', err);\r\n        setError('Failed to check authentication status');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',  // Important for cookies/session\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n      \r\n      setUser(data.user);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (name, email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n      \r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/logout', {\r\n        method: 'POST',\r\n        credentials: 'include',  // Important for cookies/session\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.message || 'Logout failed');\r\n      }\r\n      \r\n      setUser(null);\r\n    } catch (err) {\r\n      console.error('Logout failed:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n  \r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACxEC,WAAW,EAAE,SAAS,CAAE;QAC1B,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClC,IAAID,IAAI,CAACE,aAAa,EAAE;YACtBZ,OAAO,CAACU,IAAI,CAACX,IAAI,CAAC;UACpB;QACF;MACF,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZC,OAAO,CAACX,KAAK,CAAC,oBAAoB,EAAEU,GAAG,CAAC;QACxCT,QAAQ,CAAC,uCAAuC,CAAC;MACnD,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCf,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDX,WAAW,EAAE,SAAS;QAAG;QACzBY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEN,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAI,CAACL,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIc,KAAK,CAACb,IAAI,CAACc,OAAO,IAAI,cAAc,CAAC;MACjD;MAEAxB,OAAO,CAACU,IAAI,CAACX,IAAI,CAAC;MAClB,OAAOW,IAAI;IACb,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZT,QAAQ,CAACS,GAAG,CAACW,OAAO,CAAC;MACrB,MAAMX,GAAG;IACX,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMuB,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEV,KAAK,EAAEC,QAAQ,KAAK;IAChDf,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEI,IAAI;UAAEV,KAAK;UAAEC;QAAS,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAI,CAACL,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIc,KAAK,CAACb,IAAI,CAACc,OAAO,IAAI,qBAAqB,CAAC;MACxD;MAEA,OAAOd,IAAI;IACb,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZT,QAAQ,CAACS,GAAG,CAACW,OAAO,CAAC;MACrB,MAAMX,GAAG;IACX,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMyB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBzB,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEW,MAAM,EAAE,MAAM;QACdV,WAAW,EAAE,SAAS,CAAG;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAM,IAAIY,KAAK,CAACb,IAAI,CAACc,OAAO,IAAI,eAAe,CAAC;MAClD;MAEAxB,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACX,KAAK,CAAC,gBAAgB,EAAEU,GAAG,CAAC;MACpCT,QAAQ,CAACS,GAAG,CAACW,OAAO,CAAC;IACvB,CAAC,SAAS;MACRtB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM0B,KAAK,GAAG;IACZ7B,IAAI;IACJE,OAAO;IACPE,KAAK;IACLY,KAAK;IACLU,QAAQ;IACRE,MAAM;IACNE,eAAe,EAAE,CAAC,CAAC9B;EACrB,CAAC;EAED,oBAAOL,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA/B,QAAA,EAAEA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACpC,EAAA,CA7HWF,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA+HzB,OAAO,MAAMwC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7C,UAAU,CAACG,WAAW,CAAC;AAAA;AAAC0C,GAAA,CAAxCD,OAAO;AAEpB,eAAezC,WAAW;AAAC,IAAAwC,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}