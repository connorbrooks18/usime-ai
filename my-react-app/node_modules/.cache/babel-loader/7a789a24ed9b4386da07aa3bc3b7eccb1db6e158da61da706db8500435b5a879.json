{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamer\\\\OneDrive\\\\Desktop\\\\Code_Projects\\\\USIME_AI\\\\usime-ai\\\\my-react-app\\\\src\\\\pages\\\\CreateIme.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CreateIme.css';\n\n/**\r\n * CreateIme Component\r\n * \r\n * This component renders a form for lawyers to submit Independent Medical Examination (IME) reports.\r\n * It collects case information, patient details, attorney information, and allows for PDF uploads.\r\n * The form includes HIPAA compliance notices and consent requirements.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateIme() {\n  _s();\n  // ==================== STATE MANAGEMENT ====================\n\n  /**\r\n   * Main form data state\r\n   * \r\n   * This state object stores all form field values. It uses a single object\r\n   * to make it easier to handle form submission and reset functionality.\r\n   * Each property corresponds to a form field.\r\n   */\n  const [formData, setFormData] = useState({\n    caseNumber: '',\n    // Unique identifier for the legal case\n    patientName: '',\n    // Full name of the patient (PHI - protected health information)\n    patientDOB: '',\n    // Patient date of birth (PHI)\n    insuranceCompany: '',\n    // Relevant insurance company name\n    attorneyName: '',\n    // Name of the submitting attorney\n    attorneyEmail: '',\n    // Contact email of the attorney\n    attorneyPhone: '',\n    // Contact phone number of the attorney\n    injuryType: '',\n    // Type of injury from predefined list\n    injuryDate: '',\n    // Date when the injury occurred\n    additionalNotes: '',\n    // Any supplementary information\n    files: [],\n    // Array of File objects (PDFs of medical records)\n    privacyConsent: false // Boolean flag for HIPAA consent checkbox\n  });\n\n  /**\r\n   * Form submission state\r\n   * \r\n   * Tracks whether the form is currently in the process of being submitted.\r\n   * Used to disable the submit button and show loading state.\r\n   */\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  /**\r\n   * Submission feedback message\r\n   * \r\n   * Stores success or error messages to display to the user after form submission.\r\n   * Empty string means no message should be displayed.\r\n   */\n  const [submitMessage, setSubmitMessage] = useState('');\n\n  /**\r\n   * File names state\r\n   * \r\n   * Stores the names of uploaded files for display in the UI.\r\n   * This is separate from the actual File objects stored in formData.files\r\n   * to make it easier to display and remove files from the list.\r\n   */\n  const [fileNames, setFileNames] = useState([]);\n\n  // ==================== EVENT HANDLERS ====================\n\n  /**\r\n   * Handle changes to text inputs, selects, and textareas\r\n   * \r\n   * This function updates the formData state when the user types in a text field,\r\n   * selects an option from a dropdown, or enters text in a textarea.\r\n   * \r\n   * @param {Event} e - The input change event\r\n   */\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      // Spread the existing form data\n      [name]: value // Update only the changed field using computed property name\n    });\n  };\n\n  /**\r\n   * Handle file uploads\r\n   * \r\n   * This function processes file uploads when the user selects files.\r\n   * It updates both the formData.files array with the actual File objects\r\n   * and the fileNames array with the names of the files for display.\r\n   * \r\n   * @param {Event} e - The file input change event\r\n   */\n  const handleFileChange = e => {\n    // Convert FileList object to Array for easier manipulation\n    const selectedFiles = Array.from(e.target.files);\n\n    // Update formData.files with new files while preserving existing ones\n    setFormData({\n      ...formData,\n      files: [...formData.files, ...selectedFiles]\n    });\n\n    // Extract just the file names for display purposes\n    const newFileNames = selectedFiles.map(file => file.name);\n    setFileNames([...fileNames, ...newFileNames]);\n  };\n\n  /**\r\n   * Remove a file from the uploaded files list\r\n   * \r\n   * This function removes a file from both the formData.files array\r\n   * and the fileNames array when the user clicks the Remove button.\r\n   * \r\n   * @param {Number} indexToRemove - The index of the file to remove\r\n   */\n  const removeFile = indexToRemove => {\n    setFormData({\n      ...formData,\n      files: formData.files.filter((_, index) => index !== indexToRemove)\n    });\n    setFileNames(fileNames.filter((_, index) => index !== indexToRemove));\n  };\n\n  /**\r\n   * Handle checkbox changes (specifically for the privacy consent checkbox)\r\n   * \r\n   * This function updates the formData state when the user checks or unchecks\r\n   * the privacy consent checkbox.\r\n   * \r\n   * @param {Event} e - The checkbox change event\r\n   */\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: checked // Update with boolean checked value instead of string value\n    });\n  };\n\n  /**\r\n   * Handle form submission\r\n   * \r\n   * This function processes the form submission when the user clicks the Submit button.\r\n   * It validates the form data, logs it to the console (for development),\r\n   * and resets the form on successful submission.\r\n   * \r\n   * In production, this would send the data to a backend API.\r\n   * \r\n   * @param {Event} e - The form submit event\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setIsSubmitting(true); // Enable loading state\n    setSubmitMessage(''); // Clear any previous messages\n\n    try {\n      // For development/testing: just log the data to console\n      // This replaces an actual API call for now\n      console.log('Form Data Submitted:', {\n        ...formData,\n        // Format file information for easier reading in console\n        files: formData.files.map(file => ({\n          name: file.name,\n          type: file.type,\n          size: `${(file.size / 1024 / 1024).toFixed(2)} MB` // Convert bytes to MB\n        }))\n      });\n\n      // Simulate network delay for better UX testing\n      // In production, this would be a real API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Show success message to the user\n      setSubmitMessage('IME successfully submitted! A doctor will review your case shortly.');\n\n      // Reset form after successful submission\n      setFormData({\n        caseNumber: '',\n        patientName: '',\n        patientDOB: '',\n        insuranceCompany: '',\n        attorneyName: '',\n        attorneyEmail: '',\n        attorneyPhone: '',\n        injuryType: '',\n        injuryDate: '',\n        additionalNotes: '',\n        files: [],\n        privacyConsent: false\n      });\n      setFileNames([]); // Also clear the displayed file names\n    } catch (error) {\n      // Handle any errors that occur during submission\n      console.error('Error in form submission:', error);\n      setSubmitMessage('An error occurred. Please try again.');\n    } finally {\n      // Always disable loading state when done, whether successful or not\n      setIsSubmitting(false);\n    }\n  };\n\n  // ==================== COMPONENT DATA ====================\n\n  /**\r\n   * Predefined list of injury types for the dropdown menu\r\n   */\n  const injuryTypes = [\"Motor Vehicle Accident\", \"Slip and Fall\", \"Work-related Injury\", \"Medical Malpractice\", \"Product Liability\", \"Sports Injury\", \"Assault\", \"Other\"];\n\n  // ==================== COMPONENT RENDER ====================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-ime-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit Independent Medical Examination (IME)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ime-form-container\",\n      children: [submitMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `submission-message ${submitMessage.includes('Error') ? 'error' : 'success'}`,\n        children: submitMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ime-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Case Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"caseNumber\",\n                children: \"Case Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"caseNumber\",\n                name: \"caseNumber\",\n                value: formData.caseNumber,\n                onChange: handleInputChange,\n                placeholder: \"Enter case number\",\n                required: true // HTML5 validation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"insuranceCompany\",\n                children: \"Insurance Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"insuranceCompany\",\n                name: \"insuranceCompany\",\n                value: formData.insuranceCompany,\n                onChange: handleInputChange,\n                placeholder: \"Insurance company name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Patient Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"patientName\",\n                children: \"Patient Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"patientName\",\n                name: \"patientName\",\n                value: formData.patientName,\n                onChange: handleInputChange,\n                placeholder: \"Full name of patient\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"patientDOB\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"patientDOB\",\n                name: \"patientDOB\",\n                value: formData.patientDOB,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"injuryType\",\n                children: \"Injury Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"injuryType\",\n                name: \"injuryType\",\n                value: formData.injuryType,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select injury type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), injuryTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: type,\n                  children: type\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"injuryDate\",\n                children: \"Date of Injury\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"injuryDate\",\n                name: \"injuryDate\",\n                value: formData.injuryDate,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Attorney Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"attorneyName\",\n                children: \"Attorney Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"attorneyName\",\n                name: \"attorneyName\",\n                value: formData.attorneyName,\n                onChange: handleInputChange,\n                placeholder: \"Your full name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"attorneyEmail\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\" // Provides email validation\n                ,\n                id: \"attorneyEmail\",\n                name: \"attorneyEmail\",\n                value: formData.attorneyEmail,\n                onChange: handleInputChange,\n                placeholder: \"Your email address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"attorneyPhone\",\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\" // Appropriate for phone numbers\n                ,\n                id: \"attorneyPhone\",\n                name: \"attorneyPhone\",\n                value: formData.attorneyPhone,\n                onChange: handleInputChange,\n                placeholder: \"Your phone number\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Medical Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group file-upload-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"filesUpload\",\n              children: \"Upload Medical Records (PDF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"filesUpload\",\n                name: \"filesUpload\",\n                accept: \".pdf\" // Restrict to PDF files only\n                ,\n                multiple: true // Allow multiple file selection\n                ,\n                onChange: handleFileChange,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-button\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Select Files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-help-text\",\n              children: \"Maximum file size: 100MB per file. You can upload multiple files.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), fileNames.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploaded-files\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Uploaded Files:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: fileNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\" // Prevents form submission\n                  ,\n                  className: \"remove-file-btn\",\n                  onClick: () => removeFile(index),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"additionalNotes\",\n              children: \"Additional Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"additionalNotes\",\n              name: \"additionalNotes\",\n              value: formData.additionalNotes,\n              onChange: handleInputChange,\n              rows: \"5\",\n              placeholder: \"Any additional information relevant to the case...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section privacy-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Privacy and Consent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"privacy-notice\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Important: All patient information will be handled in accordance with HIPAA regulations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"All data will be encrypted at rest and in transit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Access is restricted to authorized medical professionals only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Data will only be used for the purpose of completing the requested IME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"You must have proper authorization to submit this medical information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"privacyConsent\",\n                name: \"privacyConsent\",\n                checked: formData.privacyConsent,\n                onChange: handleCheckboxChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), \"I confirm that I have legal authorization to submit this medical information and consent to its processing for the purpose of generating an IME report\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\"\n            // Disable button if:\n            // 1. Form is currently submitting\n            // 2. No files have been uploaded\n            // 3. Privacy consent hasn't been checked\n            ,\n            disabled: isSubmitting || formData.files.length === 0 || !formData.privacyConsent,\n            children: isSubmitting ? 'Submitting...' : 'Submit IME'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateIme, \"ma1Lu0Mh+kRm5IufP3Rg+Wysv4E=\");\n_c = CreateIme;\nexport default CreateIme;\nvar _c;\n$RefreshReg$(_c, \"CreateIme\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateIme","_s","formData","setFormData","caseNumber","patientName","patientDOB","insuranceCompany","attorneyName","attorneyEmail","attorneyPhone","injuryType","injuryDate","additionalNotes","files","privacyConsent","isSubmitting","setIsSubmitting","submitMessage","setSubmitMessage","fileNames","setFileNames","handleInputChange","e","name","value","target","handleFileChange","selectedFiles","Array","from","newFileNames","map","file","removeFile","indexToRemove","filter","_","index","handleCheckboxChange","checked","handleSubmit","preventDefault","console","log","type","size","toFixed","Promise","resolve","setTimeout","error","injuryTypes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onSubmit","htmlFor","id","onChange","placeholder","required","accept","multiple","length","onClick","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gamer/OneDrive/Desktop/Code_Projects/USIME_AI/usime-ai/my-react-app/src/pages/CreateIme.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CreateIme.css';\r\n\r\n/**\r\n * CreateIme Component\r\n * \r\n * This component renders a form for lawyers to submit Independent Medical Examination (IME) reports.\r\n * It collects case information, patient details, attorney information, and allows for PDF uploads.\r\n * The form includes HIPAA compliance notices and consent requirements.\r\n */\r\nfunction CreateIme() {\r\n  // ==================== STATE MANAGEMENT ====================\r\n  \r\n  /**\r\n   * Main form data state\r\n   * \r\n   * This state object stores all form field values. It uses a single object\r\n   * to make it easier to handle form submission and reset functionality.\r\n   * Each property corresponds to a form field.\r\n   */\r\n  const [formData, setFormData] = useState({\r\n    caseNumber: '',        // Unique identifier for the legal case\r\n    patientName: '',       // Full name of the patient (PHI - protected health information)\r\n    patientDOB: '',        // Patient date of birth (PHI)\r\n    insuranceCompany: '',  // Relevant insurance company name\r\n    attorneyName: '',      // Name of the submitting attorney\r\n    attorneyEmail: '',     // Contact email of the attorney\r\n    attorneyPhone: '',     // Contact phone number of the attorney\r\n    injuryType: '',        // Type of injury from predefined list\r\n    injuryDate: '',        // Date when the injury occurred\r\n    additionalNotes: '',   // Any supplementary information\r\n    files: [],             // Array of File objects (PDFs of medical records)\r\n    privacyConsent: false  // Boolean flag for HIPAA consent checkbox\r\n  });\r\n  \r\n  /**\r\n   * Form submission state\r\n   * \r\n   * Tracks whether the form is currently in the process of being submitted.\r\n   * Used to disable the submit button and show loading state.\r\n   */\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  /**\r\n   * Submission feedback message\r\n   * \r\n   * Stores success or error messages to display to the user after form submission.\r\n   * Empty string means no message should be displayed.\r\n   */\r\n  const [submitMessage, setSubmitMessage] = useState('');\r\n  \r\n  /**\r\n   * File names state\r\n   * \r\n   * Stores the names of uploaded files for display in the UI.\r\n   * This is separate from the actual File objects stored in formData.files\r\n   * to make it easier to display and remove files from the list.\r\n   */\r\n  const [fileNames, setFileNames] = useState([]);\r\n\r\n  // ==================== EVENT HANDLERS ====================\r\n  \r\n  /**\r\n   * Handle changes to text inputs, selects, and textareas\r\n   * \r\n   * This function updates the formData state when the user types in a text field,\r\n   * selects an option from a dropdown, or enters text in a textarea.\r\n   * \r\n   * @param {Event} e - The input change event\r\n   */\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,        // Spread the existing form data\r\n      [name]: value       // Update only the changed field using computed property name\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle file uploads\r\n   * \r\n   * This function processes file uploads when the user selects files.\r\n   * It updates both the formData.files array with the actual File objects\r\n   * and the fileNames array with the names of the files for display.\r\n   * \r\n   * @param {Event} e - The file input change event\r\n   */\r\n  const handleFileChange = (e) => {\r\n    // Convert FileList object to Array for easier manipulation\r\n    const selectedFiles = Array.from(e.target.files);\r\n    \r\n    // Update formData.files with new files while preserving existing ones\r\n    setFormData({\r\n      ...formData,\r\n      files: [...formData.files, ...selectedFiles]\r\n    });\r\n    \r\n    // Extract just the file names for display purposes\r\n    const newFileNames = selectedFiles.map(file => file.name);\r\n    setFileNames([...fileNames, ...newFileNames]);\r\n  };\r\n\r\n  /**\r\n   * Remove a file from the uploaded files list\r\n   * \r\n   * This function removes a file from both the formData.files array\r\n   * and the fileNames array when the user clicks the Remove button.\r\n   * \r\n   * @param {Number} indexToRemove - The index of the file to remove\r\n   */\r\n  const removeFile = (indexToRemove) => {\r\n    setFormData({\r\n      ...formData,\r\n      files: formData.files.filter((_, index) => index !== indexToRemove)\r\n    });\r\n    \r\n    setFileNames(fileNames.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  /**\r\n   * Handle checkbox changes (specifically for the privacy consent checkbox)\r\n   * \r\n   * This function updates the formData state when the user checks or unchecks\r\n   * the privacy consent checkbox.\r\n   * \r\n   * @param {Event} e - The checkbox change event\r\n   */\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: checked     // Update with boolean checked value instead of string value\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle form submission\r\n   * \r\n   * This function processes the form submission when the user clicks the Submit button.\r\n   * It validates the form data, logs it to the console (for development),\r\n   * and resets the form on successful submission.\r\n   * \r\n   * In production, this would send the data to a backend API.\r\n   * \r\n   * @param {Event} e - The form submit event\r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();      // Prevent default form submission behavior\r\n    setIsSubmitting(true);   // Enable loading state\r\n    setSubmitMessage('');    // Clear any previous messages\r\n    \r\n    try {\r\n      // For development/testing: just log the data to console\r\n      // This replaces an actual API call for now\r\n      console.log('Form Data Submitted:', {\r\n        ...formData,\r\n        // Format file information for easier reading in console\r\n        files: formData.files.map(file => ({\r\n          name: file.name,\r\n          type: file.type,\r\n          size: `${(file.size / 1024 / 1024).toFixed(2)} MB`  // Convert bytes to MB\r\n        }))\r\n      });\r\n      \r\n      // Simulate network delay for better UX testing\r\n      // In production, this would be a real API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Show success message to the user\r\n      setSubmitMessage('IME successfully submitted! A doctor will review your case shortly.');\r\n      \r\n      // Reset form after successful submission\r\n      setFormData({\r\n        caseNumber: '',\r\n        patientName: '',\r\n        patientDOB: '',\r\n        insuranceCompany: '',\r\n        attorneyName: '',\r\n        attorneyEmail: '',\r\n        attorneyPhone: '',\r\n        injuryType: '',\r\n        injuryDate: '',\r\n        additionalNotes: '',\r\n        files: [],\r\n        privacyConsent: false\r\n      });\r\n      setFileNames([]);  // Also clear the displayed file names\r\n      \r\n    } catch (error) {\r\n      // Handle any errors that occur during submission\r\n      console.error('Error in form submission:', error);\r\n      setSubmitMessage('An error occurred. Please try again.');\r\n    } finally {\r\n      // Always disable loading state when done, whether successful or not\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // ==================== COMPONENT DATA ====================\r\n  \r\n  /**\r\n   * Predefined list of injury types for the dropdown menu\r\n   */\r\n  const injuryTypes = [\r\n    \"Motor Vehicle Accident\",\r\n    \"Slip and Fall\",\r\n    \"Work-related Injury\",\r\n    \"Medical Malpractice\",\r\n    \"Product Liability\",\r\n    \"Sports Injury\",\r\n    \"Assault\",\r\n    \"Other\"\r\n  ];\r\n\r\n  // ==================== COMPONENT RENDER ====================\r\n  return (\r\n    <div className=\"create-ime-page\">\r\n      <h1>Submit Independent Medical Examination (IME)</h1>\r\n      \r\n      <div className=\"ime-form-container\">\r\n        {/* Conditional rendering of success/error message */}\r\n        {submitMessage && (\r\n          <div className={`submission-message ${submitMessage.includes('Error') ? 'error' : 'success'}`}>\r\n            {submitMessage}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Main form with onSubmit handler */}\r\n        <form className=\"ime-form\" onSubmit={handleSubmit}>\r\n          {/* Case Information Section */}\r\n          <div className=\"form-section\">\r\n            <h2>Case Information</h2>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"caseNumber\">Case Number</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"caseNumber\" \r\n                  name=\"caseNumber\" \r\n                  value={formData.caseNumber}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter case number\" \r\n                  required  // HTML5 validation\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"insuranceCompany\">Insurance Company</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"insuranceCompany\" \r\n                  name=\"insuranceCompany\" \r\n                  value={formData.insuranceCompany}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Insurance company name\" \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Patient Information Section - Contains PHI (Protected Health Information) */}\r\n          <div className=\"form-section\">\r\n            <h2>Patient Information</h2>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"patientName\">Patient Name</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"patientName\" \r\n                  name=\"patientName\" \r\n                  value={formData.patientName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Full name of patient\" \r\n                  required \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"patientDOB\">Date of Birth</label>\r\n                <input \r\n                  type=\"date\" \r\n                  id=\"patientDOB\" \r\n                  name=\"patientDOB\" \r\n                  value={formData.patientDOB}\r\n                  onChange={handleInputChange}\r\n                  required \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"injuryType\">Injury Type</label>\r\n                <select \r\n                  id=\"injuryType\" \r\n                  name=\"injuryType\" \r\n                  value={formData.injuryType}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select injury type</option>\r\n                  {/* Dynamically generate options from injuryTypes array */}\r\n                  {injuryTypes.map((type, index) => (\r\n                    <option key={index} value={type}>{type}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"injuryDate\">Date of Injury</label>\r\n                <input \r\n                  type=\"date\" \r\n                  id=\"injuryDate\" \r\n                  name=\"injuryDate\" \r\n                  value={formData.injuryDate}\r\n                  onChange={handleInputChange}\r\n                  required \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Attorney Information Section */}\r\n          <div className=\"form-section\">\r\n            <h2>Attorney Information</h2>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"attorneyName\">Attorney Name</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"attorneyName\" \r\n                  name=\"attorneyName\" \r\n                  value={formData.attorneyName}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Your full name\" \r\n                  required \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"attorneyEmail\">Email</label>\r\n                <input \r\n                  type=\"email\"  // Provides email validation\r\n                  id=\"attorneyEmail\" \r\n                  name=\"attorneyEmail\" \r\n                  value={formData.attorneyEmail}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Your email address\" \r\n                  required \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"attorneyPhone\">Phone</label>\r\n                <input \r\n                  type=\"tel\"  // Appropriate for phone numbers\r\n                  id=\"attorneyPhone\" \r\n                  name=\"attorneyPhone\" \r\n                  value={formData.attorneyPhone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Your phone number\" \r\n                  required \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Medical Records Upload Section */}\r\n          <div className=\"form-section\">\r\n            <h2>Medical Records</h2>\r\n            \r\n            <div className=\"form-group file-upload-container\">\r\n              <label htmlFor=\"filesUpload\">Upload Medical Records (PDF)</label>\r\n              <div className=\"file-upload-wrapper\">\r\n                <input \r\n                  type=\"file\" \r\n                  id=\"filesUpload\" \r\n                  name=\"filesUpload\"\r\n                  accept=\".pdf\"  // Restrict to PDF files only\r\n                  multiple       // Allow multiple file selection\r\n                  onChange={handleFileChange}\r\n                  className=\"file-input\"\r\n                />\r\n                <div className=\"file-upload-button\">\r\n                  <span>Select Files</span>\r\n                </div>\r\n              </div>\r\n              <p className=\"upload-help-text\">Maximum file size: 100MB per file. You can upload multiple files.</p>\r\n            </div>\r\n            \r\n            {/* Conditionally render the list of uploaded files */}\r\n            {fileNames.length > 0 && (\r\n              <div className=\"uploaded-files\">\r\n                <h4>Uploaded Files:</h4>\r\n                <ul>\r\n                  {fileNames.map((name, index) => (\r\n                    <li key={index}>\r\n                      <span className=\"file-name\">{name}</span>\r\n                      <button \r\n                        type=\"button\"  // Prevents form submission\r\n                        className=\"remove-file-btn\"\r\n                        onClick={() => removeFile(index)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"additionalNotes\">Additional Notes</label>\r\n              <textarea \r\n                id=\"additionalNotes\" \r\n                name=\"additionalNotes\" \r\n                value={formData.additionalNotes}\r\n                onChange={handleInputChange}\r\n                rows=\"5\" \r\n                placeholder=\"Any additional information relevant to the case...\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Privacy and Consent Section - HIPAA Compliance */}\r\n          <div className=\"form-section privacy-section\">\r\n            <h2>Privacy and Consent</h2>\r\n            \r\n            <div className=\"privacy-notice\">\r\n              <p>Important: All patient information will be handled in accordance with HIPAA regulations.</p>\r\n              <ul>\r\n                <li>All data will be encrypted at rest and in transit</li>\r\n                <li>Access is restricted to authorized medical professionals only</li>\r\n                <li>Data will only be used for the purpose of completing the requested IME</li>\r\n                <li>You must have proper authorization to submit this medical information</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"form-group checkbox-group\">\r\n              <label className=\"checkbox-container\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  id=\"privacyConsent\" \r\n                  name=\"privacyConsent\" \r\n                  checked={formData.privacyConsent}\r\n                  onChange={handleCheckboxChange}\r\n                  required \r\n                />\r\n                <span className=\"checkmark\"></span>\r\n                I confirm that I have legal authorization to submit this medical information and consent to its processing for the purpose of generating an IME report\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Form Submission Section */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-button\"\r\n              // Disable button if:\r\n              // 1. Form is currently submitting\r\n              // 2. No files have been uploaded\r\n              // 3. Privacy consent hasn't been checked\r\n              disabled={isSubmitting || formData.files.length === 0 || !formData.privacyConsent}\r\n            >\r\n              {isSubmitting ? 'Submitting...' : 'Submit IME'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateIme;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}